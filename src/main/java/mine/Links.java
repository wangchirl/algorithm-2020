package mine;

/**
 * @author shadow
 * @create 2020-12-06
 * @description
 */
public class Links {
	public static void main(String[] args) {

	}

	// 8、给定两个可能有环也可能无环的单链表，头节点head1和head2。请实现一个函数，如果两个链表相交，请返回相交的 第一个节点。如果不相交，返回null
	//【要求】
	//如果两个链表长度之和为N，时间复杂度请达到O(N)，额外空间复杂度 请达到O(1)。

	// 7、特殊链表结构，复制链表
	/**
	 * Node {
	 *     int value;
	 *     Node next;
	 *     Node rand;
	 * }
	 * rand指针是单链表节点结构中新增的指针，rand可能指向链表中的任意一个节点，也可能指向null。
	 * 给定一个由Node节点类型组成的无环单链表的头节点 head，请实现一个函数完成这个链表的复制，并返回复制的新链表的头节点。
	 * 【要求】
	 * 时间复杂度O(N)，额外空间复杂度O(1)
	 */

	// 6、将单链表按值划分为左边下、中间相等、右边大的形式
	// partition - 边界问题，左边无，中间无，右边无

	// 5、快慢指针问题
	// 5.1 输入链表头结点，奇数长度返回中点，偶数长度返回上中点
	// 5.2 输入链表头结点，奇数长度返回中点，偶数长度返回下中点
	// 5.3 输入链表头结点，奇数长度返回中点前一个，偶数长度返回上中点前一个
	// 5.4 输入链表头结点，奇数长度返回中点前一个，偶数长度返回下中点前一个


	// 4、给定链表头结点，判断链表是否回文结构
	// 4.1 哈希表方式
	// 4.2 修改原链表


	// 3、能不能不给单链表的头节点，只给想要删除的节点，就能做到在链表上把这个点删掉？


	// 2、删除给定的值



	// 1、单链表和双链表反转
}
